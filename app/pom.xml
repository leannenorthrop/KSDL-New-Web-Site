<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.londonsamyedzong</groupId>
    <version>1.0.14-SNAPSHOT</version>
    <artifactId>app</artifactId>
    <packaging>grails-app</packaging>
    <name>London Samye Dzong Website</name>
    <organization>
        <name>Kagyu Samye Dzong London Tibetan Buddhist Centre</name>
        <url>http://www.londonsamyedzong.org</url>
    </organization>
    <issueManagement>
        <system>Google Code</system>
        <url>http://code.google.com/p/lsd-website/issues</url>
    </issueManagement>
    <url>http://code.google.com/p/lsd-website/</url>
    <scm>
        <connection>scm:svn:http://lsd-website.googlecode.com/svn/trunk/</connection>
        <developerConnection>scm:svn:https://lsd-website.googlecode.com/svn/trunk/</developerConnection>
        <tag>HEAD</tag>
        <url>http://lsd-website.googlecode.com/svn/trunk/</url>
    </scm>
    <properties>
        <grails.version>1.3.4</grails.version>
        <grails-bootstrap.version>${grails.version}</grails-bootstrap.version>
        <grails-crud.version>${grails.version}</grails-crud.version>
        <grails-gorm.version>${grails.version}</grails-gorm.version>
        <grails-test.version>${grails.version}</grails-test.version>
        <grails-maven-plugin.version>${grails.version}</grails-maven-plugin.version>
        <jstl.version>1.2</jstl.version>
        <hibernate-ehcache.version>3.3.1.GA</hibernate-ehcache.version>
        <javassist.version>3.11.0.GA</javassist.version>
        <ehcache-core.version>2.2.0</ehcache-core.version>
        <hsqldb.version>2.0.0</hsqldb.version>
        <slf4j-log4j12.version>1.5.8</slf4j-log4j12.version>
        <aspectjweaver.version>1.6.8</aspectjweaver.version>
        <aspectjrt.version>1.6.8</aspectjrt.version>
        <property-file>${user.name}</property-file>
        <filter-path>${user.dir}/src/main/filters</filter-path>
        <filter.properties>${filter-path}/${user.name}.properties</filter.properties>
        <config.grails.testing.reports.destDir>/target</config.grails.testing.reports.destDir>
        <dbunit.db.driver>org.hsqldb.jdbcDriver</dbunit.db.driver>
        <dbunit.db.url>jdbc:hsqldb:file:/Users/leanne/Documents/Development/LSD/Development/lsd/app/db/dev;shutdown=true;</dbunit.db.url>
        <dbunit.db.un>SA</dbunit.db.un>
        <dbunit.db.pw/>
        <dbunit.db.schema>PUBLIC</dbunit.db.schema>
        <dbunit.out.file>${basedir}/target/export.xml</dbunit.out.file>
        <dbunit.tables>['shiro_user']</dbunit.tables>
    </properties>
    <dependencies>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.mylyn.wikitext</groupId>
            <artifactId>core</artifactId>
            <version>1.3.0.I20091106-0100-e3x</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.mylyn.wikitext</groupId>
            <artifactId>textile</artifactId>
            <version>1.3.0.I20091106-0100-e3x</version>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.0.0</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.icegreen</groupId>
            <artifactId>greenmail</artifactId>
            <version>1.3.1b</version>
        </dependency>
        <dependency>
            <groupId>net.fortuna.ical4j</groupId>
            <artifactId>ical4j</artifactId>
            <version>1.0-rc2</version>
        </dependency>
        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-bootstrap</artifactId>
            <version>${grails-bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-crud</artifactId>
            <version>${grails-crud.version}</version>
        </dependency>
        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-gorm</artifactId>
            <version>${grails-gorm.version}</version>
        </dependency>
        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-test</artifactId>
            <version>${grails-test.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <!-- Grails defaults to Ehache for the second-level Hibernate cache. -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate-ehcache.version}</version>
            <!-- See http://www.slf4j.org/faq.html#IllegalAccessError -->
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.sf.ehcache</groupId>
                    <artifactId>ehcache-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Use javassist as the bytecode manipulation provider for Hibernate -->
        <dependency>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${javassist.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>${ehcache-core.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>jms</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <!-- We have JCL-over-SLF4J instead. -->
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Use Log4J for logging. This artifact also pulls in the Log4J JAR. -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j-log4j12.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-log4j12.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Needed in the case of AOP usage -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectjweaver.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectjrt.version}</version>
        </dependency>
        <!-- Spock -->
        <!--dependency>
          <groupId>org.spockframework</groupId>
          <artifactId>spock-core</artifactId>
          <version>0.4-groovy-1.7</version>
          <scope>test</scope>
        </dependency-->
    </dependencies>
    <repositories>
        <!-- Required to get hold of JTA -->
        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>Codehaus Snapshots</id>
            <url>http://snapshots.repository.codehaus.org</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <repository>
            <id>modularity-releases</id>
            <name>Modularity Releases</name>
            <url>http://m2.modularity.net.au/releases</url>
        </repository>
        <repository>
            <id>jboss.org</id>
            <name>jboss.org</name>
            <url>http://repository.jboss.com/maven2/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>Codehaus Snapshots</id>
            <url>http://snapshots.repository.codehaus.org</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>
    <build>
        <finalName>ROOT</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement/>
        <plugins>
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>maven-clover2-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <generateXml>true</generateXml>
                    <generateHtml>true</generateHtml>
                    <licenseLocation>${basedir}/clover.license</licenseLocation>
                      <includes>
                        <include>**/*.java</include>
                        <include>**/*.groovy</include>
                      </includes>
                      <includesTestSourceRoots>false</includesTestSourceRoots>                    
                </configuration>
                <executions>
                    <execution>
                        <id>clover-cleanup</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>          
            <plugin>
                <groupId>com.samaxes.maven</groupId>
                <artifactId>maven-minify-plugin</artifactId>
                <version>1.2</version>
                <configuration>
                    <webappSourceDir>${basedir}/web-app</webappSourceDir>
                    <webappTargetDir>${project.build.directory}/${project.build.finalName}</webappTargetDir>
                    <cssSourceDir>css</cssSourceDir>
                    <jsSourceDir>js/mootools</jsSourceDir>
                    <cssSourceExcludes>**</cssSourceExcludes>
                    <!--jsSourceExcludes>*min*</jsSourceExcludes-->
                    <jsSourceIncludes>**</jsSourceIncludes>
                    <jsFinalFile>mootools-all.js</jsFinalFile>
                    <linebreak>-1</linebreak>
                    <nomunge>true</nomunge>
                    <verbose>false</verbose>
                    <preserveAllSemiColons>true</preserveAllSemiColons>
                    <disableOptimizations>false</disableOptimizations>
                    <bufferSize>4096</bufferSize>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.grails</groupId>
                <artifactId>grails-maven-plugin</artifactId>
                <version>${grails-maven-plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>init</goal>
                            <goal>maven-clean</goal>
                            <goal>validate</goal>
                            <goal>config-directories</goal>
                            <goal>maven-compile</goal>
                            <goal>maven-test</goal>
                            <goal>maven-war</goal>
                            <goal>maven-functional-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <zip destfile="${project.build.directory}/ROOT.war">
                                    <zipfileset src="${project.build.directory}/${project.artifactId}-${project.version}.war">
                                        <patternset>
                                            <exclude name="**/log4j*"/>
                                            <exclude name="**/slf4j*"/>
                                            <exclude name="**/mysql*"/>
                                            <exclude name="**/activation.jar"/>
                                            <exclude name="**/ant-1.6.5.jar"/>
                                            <exclude name="**/*-jdk14-*.jar"/>
                                            <exclude name="**/javassist-3.4.GA.jar"/>
                                            <exclude name="**/mail-1.4.jar"/>
                                            <exclude name="**/commons-beanutils-1.7.0.jar"/>
                                            <exclude name="**/commons-collections-3.1.jar"/>
                                            <exclude name="**/*junit*.jar"/>
                                            <exclude name="**/ehcache-1.2.3.jar"/>
                                        </patternset>
                                    </zipfileset>
                                </zip>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2-beta-5</version>
                <configuration>
                    <descriptors>
                        <descriptor>${basedir}/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>tools</id>
            <activation>
                <property>
                    <name>java.vendor</name>
                    <value>Sun Microsystems Inc.</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.sun</groupId>
                    <artifactId>tools</artifactId>
                    <version>${java.version}</version>
                    <scope>system</scope>
                    <systemPath>${java.home}/../lib/tools.jar</systemPath>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>db</id>
            <properties>
                <grails.env>dev</grails.env>
            </properties>
            <build>
                <plugins>
                    <!--plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <version>${gmaven-version}</version>
                        <executions>
                            <execution>
                                <id>Export Tables as DBUnit XML file</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <debug>true</debug>
                                    <verbose>true</verbose>
                                    <stacktrace>true</stacktrace>
                                    <providerSelection>1.7</providerSelection>
                                    <source><![CDATA[import groovy.sql.*
import javax.sql.*
import java.sql.*

import org.dbunit.database.*
import org.dbunit.dataset.xml.XmlDataSet
import org.dbunit.ext.oracle.*
import org.dbunit.ext.mysql.*
import org.dbunit.ext.hsqldb.*
import org.dbunit.dataset.IDataSet
import org.dbunit.operation.DatabaseOperation
import org.dbunit.dataset.xml.FlatXmlDataSet

// initialize your database connection here
def sql = Sql.newInstance(project.properties['dbunit.db.url'], project.properties['dbunit.db.un'],project.properties['dbunit.db.pw'],project.properties['dbunit.db.driver'])
IDatabaseConnection connection = new HsqldbConnection(sql.connection, project.properties['dbunit.db.schema']);
DatabaseConfig config = connection.getConfig();

config.setProperty(DatabaseConfig.PROPERTY_RESULTSET_TABLE_FACTORY, new ForwardOnlyResultSetTableFactory())
config.setProperty(DatabaseConfig.PROPERTY_DATATYPE_FACTORY, new HsqldbDataTypeFactory())

// initialize your dataset here
String[] depTableNames = Eval.me(project.properties['dbunit.tables'])
println depTableNames.class
IDataSet dataSet = connection.createDataSet( depTableNames );
XmlDataSet.write(dataSet, new FileOutputStream(project.properties['dbunit.out.file']));]]></source>
//FlatXmlDataSet.write(dataSet, new FileOutputStream(project.properties['dbunit.out.file']));]]></source>
                                </configuration>
                            </execution>                    
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.ant</groupId>
                                <artifactId>ant</artifactId>
                                <version>1.8.0</version>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.ant</groupId>
                                <artifactId>ant-launcher</artifactId>
                                <version>1.8.0</version>
                            </dependency>
                            <dependency>
                                <groupId>oracle</groupId>
                                <artifactId>oracle-jdbc</artifactId>
                                <version>${oracle.driver.version}</version>
                                <type>jar</type>
                            </dependency>
                            <dependency>
                                <groupId>mysql</groupId>
                                <artifactId>mysql-connector-java</artifactId>
                                <version>5.0.8</version>
                                <type>jar</type>
                            </dependency>                    
                            <dependency>
                                <groupId>org.dbunit</groupId>
                                <artifactId>dbunit</artifactId>
                                <version>2.4.7</version>
                            </dependency>
                        </dependencies>
                    </plugin-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>Delete Database</id>
                                <phase>process-resources</phase>
                                <configuration>
                                    <tasks>
                                        <delete includeemptydirs="true">
                                            <fileset dir="${basedir}/db" includes="**/${grails.env}.*"/>
                                        </delete>
                                        <exec dir="${basedir}" executable="liquibase.sh" searchpath="true">
                                            <arg line="--defaultsFile=${basedir}/target/${grails.env}-liquibase.properties --logLevel=debug update"/>
                                        </exec>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dbunit-maven-plugin</artifactId>
                        <version>1.0-beta-3</version>
                        <configuration>
                            <skipOracleRecycleBinTables>true</skipOracleRecycleBinTables>
                            <driver>${dbunit.db.driver}</driver>
                            <url>${dbunit.db.url}</url>
                            <username>${dbunit.db.un}</username>
                            <password>${dbunit.db.pw}</password>
                            <format>xml</format>
                            <dest>${dbunit.out.file}</dest>
                            <type>CLEAN_INSERT</type>
                            <src>${basedir}/src/main/resources/data/${grails.env}.xml</src>
                            <!--dataTypeFactoryName>org.dbunit.ext.mysql.MySqlDataTypeFactory</dataTypeFactoryName-->
                            <dataTypeFactoryName>org.dbunit.ext.hsqldb.HsqldbDataTypeFactory</dataTypeFactoryName>
                            <supportBatchStatement>true</supportBatchStatement>
                        </configuration>
                        <executions>
                            <execution>
                                <id>Import Test Data</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>operation</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>mysql</groupId>
                                <artifactId>mysql-connector-java</artifactId>
                                <version>5.0.8</version>
                                <type>jar</type>
                            </dependency>
                            <dependency>
                                <groupId>hsqldb</groupId>
                                <artifactId>hsqldb</artifactId>
                                <version>2.0.0</version>
                                <type>jar</type>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
